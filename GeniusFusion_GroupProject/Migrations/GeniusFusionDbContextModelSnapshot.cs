// <auto-generated />
using System;
using GeniusFusion_GroupProject.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeniusFusion_GroupProject.Migrations
{
    [DbContext(typeof(GeniusFusionDbContext))]
    partial class GeniusFusionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeniusFusion_GroupProject.Entities.Course", b =>
                {
                    b.Property<int?>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CourseId"));

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "Enterprise Application Development",
                            FacultyId = 1
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "Software Quality",
                            FacultyId = 2
                        });
                });

            modelBuilder.Entity("GeniusFusion_GroupProject.Entities.Enrollment", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("EnrollmentId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            StudentId = 1,
                            EnrollmentId = 0
                        },
                        new
                        {
                            CourseId = 1,
                            StudentId = 2,
                            EnrollmentId = 0
                        },
                        new
                        {
                            CourseId = 2,
                            StudentId = 1,
                            EnrollmentId = 0
                        });
                });

            modelBuilder.Entity("GeniusFusion_GroupProject.Entities.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            FacultyId = 1,
                            EmailAddress = "peter@geniusFusion.edu",
                            Name = "Peter Mazdiak"
                        },
                        new
                        {
                            FacultyId = 2,
                            EmailAddress = "Eliott@geniusFusion.edu",
                            Name = "Eliott Coleshill "
                        });
                });

            modelBuilder.Entity("GeniusFusion_GroupProject.Entities.Student", b =>
                {
                    b.Property<int?>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("StudentId"));

                    b.Property<string>("StudentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            StudentEmail = "student1@example.com",
                            StudentName = "Student 1"
                        },
                        new
                        {
                            StudentId = 2,
                            StudentEmail = "student2@example.com",
                            StudentName = "Student 2"
                        });
                });

            modelBuilder.Entity("GeniusFusion_GroupProject.Entities.Course", b =>
                {
                    b.HasOne("GeniusFusion_GroupProject.Entities.Faculty", "Faculty")
                        .WithMany("CoursesTaught")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("GeniusFusion_GroupProject.Entities.Enrollment", b =>
                {
                    b.HasOne("GeniusFusion_GroupProject.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeniusFusion_GroupProject.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("GeniusFusion_GroupProject.Entities.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("GeniusFusion_GroupProject.Entities.Faculty", b =>
                {
                    b.Navigation("CoursesTaught");
                });

            modelBuilder.Entity("GeniusFusion_GroupProject.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
